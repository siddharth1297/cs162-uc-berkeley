1. What is the value of argv? (hint: print argv)

	$1 = (char **) 0x7fffffffde68

2. What is pointed to by argv? (hint: print argv[0])

	$2 = 0x7fffffffe1fa "/home/siddharth/Desktop/cs162/ta-master/hw0/wc"

3. What is the address of the function main?

	0x4007a6

4. Try info stack. Explain what you see.

	#0  0x00007ffff7b04260 in __read_nocancel ()
    	    at ../sysdeps/unix/syscall-template.S:84
	#1  0x0000000000400924 in count (file=0x0) at wc.c:63
	#2  0x00000000004007c5 in main (argc=1, argv=0x7fffffffde68) at wc.c:23

5. Try info frame. Explain what you see.

	Stack level 0, frame at 0x7fffffffdd10:
	rip = 0x7ffff7b04260 in __read_nocancel
	   (../sysdeps/unix/syscall-template.S:84); saved rip = 0x400924
	called by frame at 0x7fffffffdd60
	source language asm.
	Arglist at 0x7fffffffdd00, args: 
	Locals at 0x7fffffffdd00, Previous frame's sp is 0x7fffffffdd10
	Saved registers:
	 rip at 0x7fffffffdd08

6. Try info registers. Which registers are holding aspects of the program that you recognize?

	rax            0xfffffffffffffe00	-512
	rbx            0x0	0
	rcx            0x7ffff7b04260	140737348911712
	rdx            0x1	1
	rsi            0x7fffffffdd27	140737488346407
	rdi            0x0	0
	rbp            0x7fffffffdd50	0x7fffffffdd50
	rsp            0x7fffffffdd08	0x7fffffffdd08
	r8             0x400a70	4196976
	r9             0x7ffff7de7ab0	140737351940784
	r10            0x37b	891
	r11            0x246	582
	r12            0x4006b0	4196016
	r13            0x7fffffffde60	140737488346720
	r14            0x0	0
	r15            0x0	0
	rip            0x7ffff7b04260	0x7ffff7b04260 <__read_nocancel+7>
	eflags         0x246	[ PF ZF IF ]
	cs             0x33	51
	ss             0x2b	43
	ds             0x0	0
	es             0x0	0
	fs             0x0	0
	gs             0x0	0

